//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class GTMSessionFetcher, GTMSessionFetcherService, GULUserDefaults, MLKContext, MLKModelDownloadLogger, MLKModelHasher, MLKModelPreferencesManager, MLKRemoteModel, NSNumber, NSObject<OS_dispatch_queue>, NSOperationQueue, NSProgress;

@interface MLKModelDownloader : NSObject
{
    _Bool _isExplicitDownload;
    MLKRemoteModel *_remoteModel;
    NSProgress *_progress;
    NSNumber *_maxRetryInterval;
    id <MLKModelDownloading> _delegate;
    MLKContext *_context;
    id <MLKModelInfoRetrieverInterop> _modelInfoRetriever;
    MLKModelHasher *_hasher;
    MLKModelPreferencesManager *_preferencesManager;
    GULUserDefaults *_userDefaults;
    GTMSessionFetcherService *_fetcherService;
    GTMSessionFetcher *_currentDownloadFetcher;
    MLKModelDownloadLogger *_downloadLogger;
    NSOperationQueue *_downloaderSerialOperationQueue;
    NSObject<OS_dispatch_queue> *_downloaderDispatchQueue;
}

+ (id)URLRequestWithURL:(id)arg1 headers:(id)arg2;
+ (id)invalidRemoteModels;
+ (void)clearInvalidRemoteModels;
+ (void)clearModelDownloaderInstances;
+ (void)initialize;
+ (id)downloaderForRemoteModel:(id)arg1 context:(id)arg2 modelInfoRetriever:(id)arg3;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *downloaderDispatchQueue; // @synthesize downloaderDispatchQueue=_downloaderDispatchQueue;
@property(retain, nonatomic) NSOperationQueue *downloaderSerialOperationQueue; // @synthesize downloaderSerialOperationQueue=_downloaderSerialOperationQueue;
@property(retain, nonatomic) MLKModelDownloadLogger *downloadLogger; // @synthesize downloadLogger=_downloadLogger;
@property(retain, nonatomic) GTMSessionFetcher *currentDownloadFetcher; // @synthesize currentDownloadFetcher=_currentDownloadFetcher;
@property(retain, nonatomic) GTMSessionFetcherService *fetcherService; // @synthesize fetcherService=_fetcherService;
@property(retain, nonatomic) GULUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(retain, nonatomic) MLKModelPreferencesManager *preferencesManager; // @synthesize preferencesManager=_preferencesManager;
@property(retain, nonatomic) MLKModelHasher *hasher; // @synthesize hasher=_hasher;
@property(retain, nonatomic) id <MLKModelInfoRetrieverInterop> modelInfoRetriever; // @synthesize modelInfoRetriever=_modelInfoRetriever;
@property(retain, nonatomic) MLKContext *context; // @synthesize context=_context;
@property(nonatomic) _Bool isExplicitDownload; // @synthesize isExplicitDownload=_isExplicitDownload;
@property(nonatomic) __weak id <MLKModelDownloading> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSNumber *maxRetryInterval; // @synthesize maxRetryInterval=_maxRetryInterval;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) MLKRemoteModel *remoteModel; // @synthesize remoteModel=_remoteModel;
- (void).cxx_destruct;
- (void)removeItemIfExistsAtURL:(id)arg1;
- (void)addBlockToDownloaderSerialQueue:(CDUnknownBlockType)arg1;
- (_Bool)isDiskSpaceAvailableToDownloadModelWithSize:(long long)arg1;
- (_Bool)isModelInfoIncompatibleWithCurrentApp:(id)arg1;
- (id)downloadedModelTempFileURL;
- (void)synchronizeUserDefaults;
- (void)cancelPendingDownload;
- (void)savePendingModelHash:(id)arg1;
- (id)pendingModelHash;
- (void)saveDownloadedModelHash:(id)arg1;
- (id)downloadedModelHash;
- (id)sessionConfigurationWithConditions:(id)arg1 isFallbackDownloadURL:(_Bool)arg2;
- (void)postDownloadNotificationForRemoteModelWithError:(id)arg1;
- (void)markDownloadCompleteWithError:(id)arg1;
- (void)notifyModelDownloadCompletedWithModelPath:(id)arg1 modelInfo:(id)arg2 error:(id)arg3;
- (void)validateModelAtPath:(id)arg1 modelInfo:(id)arg2;
- (void)beginModelDownloadWithURL:(id)arg1 modelInfo:(id)arg2 conditions:(id)arg3;
- (void)downloadModelIfNeededWithConditions:(id)arg1 modelInfo:(id)arg2;
- (id)initWithRemoteModel:(id)arg1 context:(id)arg2 modelInfoRetriever:(id)arg3;
- (id)invalidDownloadedModelInfoWithHash:(id)arg1;
- (id)modelDownloadKeyStringWithName:(id)arg1;
- (id)initWithRemoteModel:(id)arg1 context:(id)arg2 logger:(id)arg3 modelInfoRetriever:(id)arg4 hasher:(id)arg5 preferencesManager:(id)arg6 fetcherService:(id)arg7 userDefaults:(id)arg8;
- (void)dealloc;
- (void)saveIncompatibleRemoteModelInfo:(id)arg1 validationError:(id)arg2;
- (void)removeDownloadedModelHash;
- (void)invalidateDownloadedModelHash;
- (void)saveRemoteModelInfo:(id)arg1;
@property(readonly, nonatomic) _Bool isRemoteModelDownloaded;
- (id)downloadRemoteModelWithConditions:(id)arg1;

@end

